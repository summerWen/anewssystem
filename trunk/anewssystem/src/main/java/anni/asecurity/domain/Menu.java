package anni.asecurity.domain;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OrderBy;
import javax.persistence.Table;

import anni.asecurity.web.support.extjs.AbstractLongSortedTreeEntityBean;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;
import org.hibernate.annotations.GenericGenerator;


/**
 * Menu generated by Lingo.
 *
 * @author Lingo
 * @since 2007年08月18日 下午 20时18分45秒0
 */
@Entity
@Table(name = "A_SECURITY_MENU")
@Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)
public class Menu extends AbstractLongSortedTreeEntityBean<Menu> {
    /** * serial. */
    static final long serialVersionUID = 0L;

    /** * id. */
    private Long id;

    /** * parent. */
    private Menu parent;

    /** * name. */
    private String name;

    /** * theSort. */
    private Integer theSort;

    /** * title. */
    private String title;

    /** * tip. */
    private String tip;

    /** * image. */
    private String image;

    /** * forward. */
    private String forward;

    /** * target. */
    private String target;

    /** * descn. */
    private String descn;

    /** * menus. */
    private Set<Menu> children = new HashSet<Menu>(0);

    /** * roles. */
    private Set<Role> roles = new HashSet<Role>(0);

    /** * 构造方法. */
    public Menu() {
    }

    /** * @return id. */
    @GenericGenerator(name = "generator", strategy = "increment")
    @Id
    @GeneratedValue(generator = "generator")
    @Column(name = "ID", unique = true, nullable = false)
    public Long getId() {
        return id;
    }

    /** * @param id id. */
    public void setId(Long id) {
        this.id = id;
    }

    /** * @return parent. */
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "PARENT_ID")
    public Menu getParent() {
        return parent;
    }

    /** * @param parent Menu. */
    public void setParent(Menu parent) {
        this.parent = parent;
    }

    /** * @return name. */
    @Column(name = "NAME", length = 50)
    public String getName() {
        return name;
    }

    /** * @param name name. */
    public void setName(String name) {
        this.name = name;
    }

    /** * @return theSort. */
    @Column(name = "THE_SORT")
    public Integer getTheSort() {
        return theSort;
    }

    /** * @param theSort Integer. */
    public void setTheSort(Integer theSort) {
        this.theSort = theSort;
    }

    /** * @return title. */
    @Column(name = "TITLE", length = 50)
    public String getTitle() {
        return title;
    }

    /** * @param title title. */
    public void setTitle(String title) {
        this.title = title;
    }

    /** * @return tip. */
    @Column(name = "TIP", length = 50)
    public String getTip() {
        return tip;
    }

    /** * @param tip tip. */
    public void setTip(String tip) {
        this.tip = tip;
    }

    /** * @return image. */
    @Column(name = "IMAGE", length = 50)
    public String getImage() {
        return image;
    }

    /** * @param image image. */
    public void setImage(String image) {
        this.image = image;
    }

    /** * @return forward. */
    @Column(name = "FORWARD", length = 50)
    public String getForward() {
        return forward;
    }

    /** * @param forward forward. */
    public void setForward(String forward) {
        this.forward = forward;
    }

    /** * @return target. */
    @Column(name = "TARGET", length = 50)
    public String getTarget() {
        return target;
    }

    /** * @param target target. */
    public void setTarget(String target) {
        this.target = target;
    }

    /** * @return descn. */
    @Column(name = "DESCN", length = 200)
    public String getDescn() {
        return descn;
    }

    /** * @param descn descn. */
    public void setDescn(String descn) {
        this.descn = descn;
    }

    /** * @return children. */
    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "parent")
    @OrderBy("theSort asc, id desc")
    public Set<Menu> getChildren() {
        return children;
    }

    /** * @param children Set. */
    public void setChildren(Set<Menu> children) {
        this.children = children;
    }

    /** * @return roles. */
    @ManyToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY)
    @JoinTable(name = "A_SECURITY_MENU_ROLE", joinColumns =  {
        @JoinColumn(name = "MENU_ID")
    }
    , inverseJoinColumns =  {
        @JoinColumn(name = "ROLE_ID")
    }
    )
    public Set<Role> getRoles() {
        return roles;
    }

    /** * @param roles roles. */
    public void setRoles(Set<Role> roles) {
        this.roles = roles;
    }
}
